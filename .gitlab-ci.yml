default:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY


stages:
  - build

variables:
  # When you use the dind service, you must instruct Docker to talk with
  # the daemon started inside the service. The daemon is available
  # with a network connection instead of the default
  # /var/run/docker.sock socket. Docker 19.03 does this automatically
  # by setting the DOCKER_HOST in
  # https://github.com/docker-library/docker/blob/d45051476babc297257df490d22cbd806f1b11e4/19.03/docker-entrypoint.sh#L23-L29
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/services/#accessing-the-services.
  #
  # Specify to Docker where to create the certificates. Docker
  # creates them automatically on boot, and creates
  # `/certs/client` to share between the service and job
  # container, thanks to volume mount from config.toml
  DOCKER_TLS_CERTDIR: "/certs"
  # Use the GitLab Container Registry
  REGISTRY: $CI_REGISTRY
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  # DOCKER_DRIVER: overlay2

build_nginx:
  stage: build
  script:
    - cd raspi-webserver
    - docker build -t $CI_REGISTRY_IMAGE/webserver:latest -f Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/webserver:latest

build_raspi:
  stage: build
  script:
    - cd raspi-robot
    - docker build -t $CI_REGISTRY_IMAGE/robot:latest -f Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/robot:latest
